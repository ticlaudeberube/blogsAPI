{
	"info": {
		"_postman_id": "49474750-b82d-4198-9722-37397997773e",
		"name": "Blog API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5726056"
	},
	"item": [
		{
			"name": "Add blogpost",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(':blogId', pm.response.json().id)\r",
							"\r",
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Topics is an array and is not empty\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.topics).to.be.an('array').and.to.have.lengthOf.at.least(1, \"Topics array should not be empty\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Year is a non-negative integer\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.year).to.be.a('number').and.to.be.at.least(0);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": null,\r\n    \"title\":\"Enable faster delivery with hybrid development 2\",\r\n    \"i18n\": \"blogHybridDevelopment\",\r\n    \"live\": true,\r\n    \"url\": \"/blogs/hybrid-development\",\r\n    \"topics\": [\r\n        \"mobileDevelopment\",\r\n        \"valueDelivery\",\r\n        \"webPerformance\"\r\n    ], \r\n    \"year\":2024\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:8000/blogposts",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"blogposts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Cannot add duplicate title",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Response status code is 403\", function () {\r",
							"  pm.expect(pm.response.code).to.equal(403);\r",
							"});\r",
							"\r",
							"pm.test(\"Should not allow duplicate title\", function () {\r",
							"  pm.expect(pm.response.json().detail).to.equal(\"Blogpost already exits\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": null,\r\n    \"title\":\"Enable faster delivery with hybrid development 2\",\r\n    \"i18n\": \"blogHybridDevelopment\",\r\n    \"live\": true,\r\n    \"url\": \"/blogs/hybrid-development\",\r\n    \"topics\": [\r\n        \"mobileDevelopment\",\r\n        \"valueDelivery\",\r\n        \"webPerformance\"\r\n    ], \r\n    \"year\":2024\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:8000/blogposts",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"blogposts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Modify",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Title should be modified\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    pm.expect(responseData.title).to.contain('modified');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"{{:blogId}}\",\r\n    \"title\":\"Enable faster delivery with hybrid development - modified\",\r\n    \"i18n\": \"blogHybridDevelopment\",\r\n    \"live\": true,\r\n    \"url\": \"/blogs/hybrid-development\",\r\n    \"topics\": [\r\n        \"mobileDevelopment\",\r\n        \"valueDelivery\",\r\n        \"webPerformance\"\r\n    ], \r\n    \"year\":2024\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:8000/blogposts/{{:blogId}}",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"blogposts",
						"{{:blogId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get blogposts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Should return one Item\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    pm.expect(responseData).to.have.lengthOf(1);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Title should be modified\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    pm.expect(responseData[0].title).to.contain('modified');\r",
							"});\r",
							"\r",
							"pm.test(\"Id is a non-empty string\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    responseData.forEach(function(post) {\r",
							"        pm.expect(post.id).to.be.a('string').and.to.have.lengthOf.at.least(1);\r",
							"    });\r",
							"});\r",
							"\r",
							"pm.test(\"Live is a boolean\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    responseData.forEach(function(post) {\r",
							"        pm.expect(post.live).to.be.a('boolean');\r",
							"    });\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/blogposts",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"blogposts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete blogpost",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Code and deleted fields exist in the response\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  \r",
							"  pm.expect(responseData).to.be.an('object');\r",
							"  pm.expect(responseData).to.have.property('code');\r",
							"  pm.expect(responseData).to.have.property('deleted');\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							"\r",
							"pm.test(\"Deleted field is of type string\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.deleted).to.be.a('string');\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8000/blogposts/{{:blogId}}",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8000",
					"path": [
						"blogposts",
						"{{:blogId}}"
					]
				}
			},
			"response": []
		}
	]
}